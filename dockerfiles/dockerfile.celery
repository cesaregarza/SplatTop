###############################
#         Base Image          #
###############################
ARG BASE_IMAGE=python:3.11-slim

FROM $BASE_IMAGE AS base

WORKDIR /app

ENV POETRY_HOME="/opt/poetry" \
    POETRY_VIRTUALENVS_CREATE=false \
    POETRY_VIRTUALENVS_IN_PROJECT=false \
    POETRY_NO_INTERACTION=1
ENV PATH="$PATH:$POETRY_HOME/bin"

# Install dependencies
RUN apt-get update && apt-get install -y \
    curl \
    gcc \
    make \
    && rm -rf /var/lib/apt/lists/*

# Install poetry
RUN curl -sSL https://install.python-poetry.org | python3 - 

RUN poetry config virtualenvs.create false

###############################
#    Install  Dependencies    #
###############################
FROM base AS dependencies

COPY pyproject.toml poetry.lock ./
RUN poetry install --no-root --no-dev --without scripts

###############################
#        Build Image          #
###############################
FROM dependencies AS build

ARG BUILD_VERSION

COPY README.md /app/
COPY pyproject.toml poetry.lock /app/
COPY src/fast_api_app /app/src/fast_api_app
COPY src/celery_app /app/src/celery_app
COPY src/shared_lib /app/src/shared_lib

# Build the application
RUN poetry version $BUILD_VERSION && \
    poetry build && \
    poetry install --no-dev --without scripts && \
    poetry update

CMD ["poetry", "run", "celery", "-A", "celery_app.app", "worker", "--loglevel=info"]